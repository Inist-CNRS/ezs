[use]
plugin = basics
plugin = analytics

[JSONParse]
separator = *

# Création d'un identifiant unique pour le corpus reçu
[singleton]
[singleton/identify]
[singleton/env]
path = identifier
value = get('uri').replace('uid:/', '')

# Traitement asynchnrone de tous les items du corpus
[fork]
standalone = true

# Calcul sur le coprus
[fork/assign]
path = size
value = get('value').size()

[fork/statistics]
path = size

# Sauvegarde le résultat produit
[fork/FILESave]
location = /tmp
identifier = env('identifier')
jsonl = true

# Signal le fin du traitment via un appel à un webhook
[fork/replace]
path = body
value = self().pick(['size', 'atime', 'mtime', 'ctime']).set('identifier', env('identifier')).set('state', 'ready')

[fork/URLFetch]
url = https://webhook.site/ad6d5e25-e976-414e-b19e-359d23ac2400
path = body
headers = Content-Type:application/json

# Retour immédiat d'un seul élement indiquant que le coprus est en cours de traitement
[shift]
[replace]
path = identifier
value = env('identifier')
path = state
value = pending
path = info
value = https://webhook.site/#!/ad6d5e25-e976-414e-b19e-359d23ac2400/9259cdae-a586-44da-bfc0-f98b4392e208/1

[JSONString]
indent = env('indent')

